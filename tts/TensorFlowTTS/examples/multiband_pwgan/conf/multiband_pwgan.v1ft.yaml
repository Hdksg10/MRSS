
# This is the hyperparameter configuration file for Multi-Band MelGAN with PWGAN discriminator.
# This one is adjusted for finetuning, used to finetune the LJSpeech pretrained Multi-Band MelGAN generator on a 50-minute male speaker dataset
# You may have to tune this for your own

# Main differences from regular training config are: 
# 1. We start training the discriminator from the start
# 2. The learning rate is very low
# 3. Max iterations, save intervals, and associates are lowered because this gets done very quickly

###########################################################
#                FEATURE EXTRACTION SETTING               #
###########################################################
sampling_rate: 22050
hop_size: 256            # Hop size.
format: "npy"


###########################################################
#         GENERATOR NETWORK ARCHITECTURE SETTING          #
###########################################################
model_type: "multiband_melgan_generator"

multiband_melgan_generator_params:
    out_channels: 4               # Number of output channels (number of subbands).
    kernel_size: 7                # Kernel size of initial and final conv layers.
    filters: 384                  # Initial number of channels for conv layers.
    upsample_scales: [8, 4, 2]    # List of Upsampling scales.
    stack_kernel_size: 3          # Kernel size of dilated conv layers in residual stack.
    stacks: 4                     # Number of stacks in a single residual stack module.
    is_weight_norm: false         # Use weight-norm or not.

###########################################################
#       DISCRIMINATOR NETWORK ARCHITECTURE SETTING        #
###########################################################
parallel_wavegan_discriminator_params:
    out_channels: 1       # Number of output channels.
    kernel_size: 3        # Number of output channels.
    n_layers: 10            # Number of conv layers.
    conv_channels: 64     # Number of chnn layers.
    use_bias: true            # Whether to use bias parameter in conv.
    nonlinear_activation: "LeakyReLU" # Nonlinear function after each conv.
    nonlinear_activation_params:      # Nonlinear function parameters
        alpha: 0.2           # Alpha in LeakyReLU.

###########################################################
#                   STFT LOSS SETTING                     #
###########################################################
stft_loss_params:
    fft_lengths: [1024, 2048, 512]  # List of FFT size for STFT-based loss.
    frame_steps: [120, 240, 50]     # List of hop size for STFT-based loss
    frame_lengths: [600, 1200, 240] # List of window length for STFT-based loss.

subband_stft_loss_params:
    fft_lengths: [384, 683, 171]  # List of FFT size for STFT-based loss.
    frame_steps: [30, 60, 10]     # List of hop size for STFT-based loss
    frame_lengths: [150, 300, 60] # List of window length for STFT-based loss.

###########################################################
#               ADVERSARIAL LOSS SETTING                  #
###########################################################
lambda_feat_match: 10.0      # Loss balancing coefficient for feature matching loss
lambda_adv: 2.5              # Loss balancing coefficient for adversarial loss.

###########################################################
#                  DATA LOADER SETTING                    #
###########################################################
batch_size: 64                 # Batch size for each GPU with asuming that gradient_accumulation_steps == 1.
batch_max_steps: 8192          # Length of each audio in batch for training. Make sure dividable by hop_size.
batch_max_steps_valid: 81920   # Length of each audio for validation. Make sure dividable by hope_size.
remove_short_samples: true     # Whether to remove samples the length of which are less than batch_max_steps.
allow_cache: true              # Whether to allow cache in dataset. If true, it requires cpu memory.
is_shuffle: true               # shuffle dataset after each epoch.

###########################################################
#             OPTIMIZER & SCHEDULER SETTING               #
###########################################################
generator_optimizer_params:
    lr_fn: "PiecewiseConstantDecay"
    lr_params: 
        boundaries: [1000, 5000, 10000, 20000]
        values: [0.00000000001, 0.000000000005, 0.000000000002, 0.0000000000005, 0.0000000000002]
    amsgrad: false


discriminator_optimizer_params:
    lr_fn: "ExponentialDecay"
    lr_params: 
        initial_learning_rate: 0.0000000005
        decay_steps: 70000
        decay_rate: 0.5

gradient_accumulation_steps: 1
###########################################################
#                    INTERVAL SETTING                     #
###########################################################
discriminator_train_start_steps: 0  # steps begin training discriminator
train_max_steps: 10000                 # Number of training steps.
save_interval_steps: 1500               # Interval steps to save checkpoint.
eval_interval_steps: 500                # Interval steps to evaluate the network.
log_interval_steps: 100                  # Interval steps to record the training log.

###########################################################
#                     OTHER SETTING                       #
###########################################################
num_save_intermediate_results: 1  # Number of batch to be saved as intermediate results.
